{"version":3,"file":"otherBundles/bundle_registered_home.js","mappings":"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,CAAC,CAAC,CAAC,CAACtB,WAAW,GAAGkG,iDAAS,CAAC,iDAAiD,CAAC;MAClI1J,QAAQ,CAACC,aAAa,CAAE,oBAAmB,CAAC,CAAC6E,OAAO,CAAC,CAAC,CAAC,CAACtB,WAAW,GAAGkG,iDAAS,CAAC,gDAAgD,CAAC;MACjI1J,QAAQ,CAACC,aAAa,CAAE,mBAAkB,CAAC,CAACuD,WAAW,GAAGkG,iDAAS,CAAC,kCAAkC,CAAC;MAEvG1J,QAAQ,CAACC,aAAa,CAAE,cAAa,CAAC,CAACuD,WAAW,GAAGkG,iDAAS,CAAC,oBAAoB,CAAC;IACxF,CAAC,CAAC,CACD5F,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACV;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzkBA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA,2EAA2E,eAAe;AAC1F;AACA;AACA;AACA;AACA;AACA,2EAA2E,eAAe;AAC1F;AACA;AACA;AACA;AACA;AACA,2EAA2E,eAAe;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO,EAAE,aAAa,EAAE,QAAQ;AAClF;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,GAAG,WAAW;AAC7C,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,aAAa;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,GAAG,EAAE;AAChC;AACA;AACA,+CAA+C,OAAO,GAAG,EAAE;AAC3D;AACA;AACA;AACA,cAAc,OAAO,GAAG,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,aAAa;AACb,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wDAAwD;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU,EAAE,YAAY,EAAE,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU,EAAE,YAAY,EAAE,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,KAAK,GAAG,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY,EAAE,aAAa,EAAE,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,2EAA2E,6BAA6B,iCAAiC,mBAAmB,6BAA6B,kCAAkC;AAC3N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,6BAA6B,8BAA8B,6BAA6B;AAC1J,iCAAiC,6BAA6B;AAC9D;AACA;AACA,sEAAsE,OAAO;AAC7E,eAAe;AACf,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,uFAAuF,UAAU,GAAG,IAAI;AACxG;AACA;AACA,kGAAkG,UAAU,GAAG,IAAI;AACnH,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA;AACA,yEAAyE,SAAS,UAAU,OAAO;AACnG;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS,GAAG,GAAG;AAChD,8BAA8B,SAAS,GAAG,GAAG;AAC7C,mCAAmC,QAAQ,mBAAmB,iBAAiB,qCAAqC,OAAO;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,kCAAkC,6BAA6B;AAC/D,qCAAqC,6BAA6B,SAAS,6BAA6B;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI,EAAE,8BAA8B,EAAE,gBAAgB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gFAAgF,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,IAAI,EAAE,OAAO;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0LAA0L,qBAAqB,EAAE,4BAA4B,qBAAqB,OAAO,EAAE,eAAe;AAC1R;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB,EAAE,4BAA4B,qBAAqB,OAAO,EAAE,mBAAmB;AACtH;AACA;AACA;AACA,kDAAkD,KAAK;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAkB;AAC1E;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,YAAY,OAAO,YAAY;AAClF,mEAAmE,YAAY,EAAE,oBAAoB,OAAO,oBAAoB,EAAE,YAAY;AAC9I,iEAAiE,mBAAmB,OAAO,mBAAmB;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ,2DAA2D,YAAY,oBAAoB,IAAI;AAC/F;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,IAAI,KAAK;AACjD,4BAA4B,EAAE,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,6EAA6E,IAAI;AACjF,kBAAkB,IAAI,EAAE,IAAI,EAAE,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,GAAG;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,UAAU,cAAc,IAAI;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR,6DAA6D,WAAW;AACxE;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,IAAI,GAAG,GAAG;AAClC;AACA;AACA,UAAU,iCAAiC;AAC3C;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO,oBAAoB,IAAI,eAAe,KAAK;AACtF,2CAA2C,OAAO,mBAAmB,IAAI,eAAe,IAAI;AAC5F;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4CAA4C,IAAI,sBAAsB,UAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,aAAa;AAC5G;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,eAAe;AAClH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,eAAe;AAClH;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB,EAAE,aAAa,EAAE,EAAE;AACzE,QAAQ;AACR,2CAA2C,kBAAkB,EAAE,aAAa,EAAE,IAAI;AAClF;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,EAAE,GAAG,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,eAAe;AAChH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6M;;;;;;;UCh0E7M;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AAE8B;AACF;AACY;AAExCuC,MAAM,CAACpG,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAC9C,IAAIrB,sDAAU,CAAC,IAAI8K,gDAAI,CAAC,CAAC,EAAE,IAAIT,iDAAK,CAAC,CAAC,CAAC,CAACjK,IAAI,CAAC,CAAC;AAClD,CAAC,CAAC,C","sources":["webpack://dream_diary_project/./js/pages/registered_home/controller.js","webpack://dream_diary_project/./js/pages/registered_home/model.js","webpack://dream_diary_project/./js/pages/registered_home/view.js","webpack://dream_diary_project/./node_modules/i18next/dist/esm/i18next.js","webpack://dream_diary_project/webpack/bootstrap","webpack://dream_diary_project/webpack/runtime/define property getters","webpack://dream_diary_project/webpack/runtime/hasOwnProperty shorthand","webpack://dream_diary_project/webpack/runtime/make namespace object","webpack://dream_diary_project/./js/pages/registered_home/index.js"],"sourcesContent":["/**\r\n * registered_home page controller module.\r\n * @module js/pages/registered_home/controller\r\n */\r\n\r\nexport default class Controller {\r\n    constructor(view, model) {\r\n        this.view = view;\r\n        this.model = model;\r\n    }\r\n\r\n    init() {\r\n        this._initTranslation();\r\n        this._initBurgerButtonListener();\r\n        this._initNotification();\r\n        this._initDreamSearchInputElement();\r\n        this._initDreamSearchListener();\r\n        this._initDreamCategoryListener();\r\n        this._initDreamMoodListener();\r\n        this._initSortListener();\r\n        this._initMainPlotListener();\r\n        this._initUserSearchListener();\r\n        this._initDreamRecords();\r\n    }\r\n\r\n    /**\r\n    Initializes the translation based on the user's selected language.\r\n    Calls the view's translatePage method if language is set to 'ru'.\r\n    @function _initTranslation */\r\n    _initTranslation() {\r\n        if (localStorage.getItem('language') === 'ru') {\r\n            this.view.translatePage();\r\n        }\r\n    }\r\n\r\n    /**\r\n    Initializes the listener for the burger button.\r\n    Toggles the visibility of the burger content based on user interactions.\r\n    @function _initBurgerButtonListener */\r\n    _initBurgerButtonListener() {\r\n        document.querySelector('.body').addEventListener('click', (event) => {\r\n            if (event.target.id === 'burger-button' || event.target.parentNode.id === 'burger-button') {\r\n                document.querySelector('#burger-content').classList.remove('not-exist');\r\n            }\r\n            else if (!event.target.closest('.burger-content-wrapper')) {\r\n                document.querySelector('#burger-content').classList.add('not-exist');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initializes notification functionality for the application.\r\n    Sets up an interaction object to track user interaction and a default interval to check for notifications every minute.\r\n    Listens for click events on the document to track user interaction and adjust notification checking accordingly. */\r\n    _initNotification() {\r\n        var interaction = {\r\n            interacted: false\r\n        };\r\n\r\n        var defaultInterval = setInterval(() => {\r\n            const currentTime = new Date();\r\n            const hours = currentTime.getHours();\r\n            const minutes = currentTime.getMinutes();\r\n\r\n            if (hours === 22 && minutes === 0) {\r\n                const notification = this.view.getNotificationBlockElement();\r\n                notification.style.display = 'block';\r\n                setTimeout(() => {\r\n                    notification.style.display = 'none';\r\n                }, 5000);\r\n            }\r\n        }, 60000);\r\n\r\n        document.addEventListener('click', () => {\r\n            interaction.interacted = true;\r\n            clearInterval(defaultInterval);\r\n\r\n            setInterval(() => {\r\n                const currentTime = new Date();\r\n                const hours = currentTime.getHours();\r\n                const minutes = currentTime.getMinutes();\r\n\r\n                if (hours === 22 && minutes === 0) {\r\n                    const notification = this.view.getNotificationBlockElement();\r\n\r\n                    if (notification.style.display !== 'block') {\r\n                        notification.style.display = 'block';\r\n\r\n                        const sound = new Audio('../audio/notification.mp3');\r\n                        sound.play();\r\n\r\n                        setTimeout(() => {\r\n                            notification.style.display = 'none';\r\n                        }, 5000);\r\n                    }\r\n\r\n                }\r\n            }, 60000);\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initializes the dream search input element, fetches dream records from the model and displays auto-suggestions based on user input.\r\n    */\r\n    _initDreamSearchInputElement() {\r\n        const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n            dreamSearchButton = this.view.getDreamSearchButtonElement();\r\n\r\n        this.model.getPromisegetDreamRecords()\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const possibleSuggestions = data.map(record => record.dreamTitle);\r\n                let counter = 0;\r\n\r\n                dreamSearchInput.addEventListener('keydown', (event) => {\r\n\r\n                    let searchInputValue = dreamSearchInput.value.toLowerCase(),\r\n                        autoSuggestions = this.view.getDreamSearchAutocompleteElement();\r\n\r\n                    autoSuggestions.innerHTML = \"\",\r\n                        counter = 0;\r\n\r\n                    for (let i = 0; i < possibleSuggestions.length; i++) {\r\n                        const suggestion = possibleSuggestions[i];\r\n                        if (suggestion.toLowerCase().includes(searchInputValue) && searchInputValue.length > 0) {\r\n                            let suggestionElement = document.createElement(\"a\");\r\n                            suggestionElement.textContent = suggestion;\r\n                            suggestionElement.href = \"#\";\r\n                            suggestionElement.onclick = function () {\r\n                                dreamSearchInput.value = suggestion;\r\n                                autoSuggestions.style.display = \"none\";\r\n\r\n                                dreamSearchButton.click();\r\n                            };\r\n\r\n                            autoSuggestions.appendChild(suggestionElement);\r\n                            counter++;\r\n                        }\r\n                        if (counter === 3) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (searchInputValue.length > 0) {\r\n                        autoSuggestions.style.display = \"block\";\r\n                    } else {\r\n                        autoSuggestions.style.display = \"none\";\r\n                    }\r\n\r\n                    if (event.key === 'Enter') {\r\n                        dreamSearchButton.click();\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    /**\r\n    Initializes the event listener for dream search functionality\r\n    */\r\n    _initDreamSearchListener() {\r\n        const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n            dreamSearchButton = this.view.getDreamSearchButtonElement();\r\n\r\n        dreamSearchButton.addEventListener('click', () => {\r\n\r\n            this.view.clearMainPlotHtml();\r\n\r\n            const categorySelect = this.view.getDreamCategorySelectElement(),\r\n                moodSelect = this.view.getDreamMoodSelectElement(),\r\n                dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n            const userSearchDiv = this.view.getUserSearchDivElement();\r\n            try {\r\n                const userNickname = userSearchDiv.children[0].children[1].children[0].children[1].innerText;\r\n                this.model.getPromiseGetUserByNickname(userNickname)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data.length) {\r\n                            this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[moodSelect.selectedIndex].value,\r\n                                moodSelect.options[moodSelect.selectedIndex].value,\r\n                                dreamSortSelect.options[dreamSortSelect.selectedIndex].value, data[0].email);\r\n                        } else {\r\n                            console.log('User not found');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error:', error);\r\n                    });\r\n            }\r\n            catch {\r\n                this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[moodSelect.selectedIndex].value,\r\n                    moodSelect.options[moodSelect.selectedIndex].value,\r\n                    dreamSortSelect.options[dreamSortSelect.selectedIndex].value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initialize the Dream Category listener for the select element and icon element\r\n    */\r\n    _initDreamCategoryListener() {\r\n        const dreamCategorySelect = this.view.getDreamCategorySelectElement(),\r\n            dreamCategoryIcon = this.view.getDreamCategoryIconElement();\r\n\r\n        dreamCategorySelect.addEventListener('change', (event) => {\r\n            switch (event.target.value) {\r\n                case 'All':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_mood/select.svg';\r\n                    break;\r\n                case 'Usual':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_category/usual.svg';\r\n                    break;\r\n                case 'Just talking':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_category/just_talking.svg';\r\n                    break;\r\n                case 'Nightmare':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_category/nightmare.svg';\r\n                    break;\r\n                case 'Action':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_category/action.svg';\r\n                    break;\r\n                case 'Trash':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_category/trash.svg';\r\n                    break;\r\n                case 'Conscious dream':\r\n                    dreamCategoryIcon.src = '../icons/make_record/dream_category/conscious_dream.svg';\r\n                    break;\r\n                default:\r\n                    console.log('No such option in select dream category');\r\n            }\r\n\r\n            this.view.clearMainPlotHtml();\r\n\r\n\r\n            const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                moodSelect = this.view.getDreamMoodSelectElement(),\r\n                dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n            const userSearchDiv = this.view.getUserSearchDivElement();\r\n            try {\r\n                const userNickname = userSearchDiv.children[0].children[1].children[0].children[1].innerText;\r\n                this.model.getPromiseGetUserByNickname(userNickname)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data.length) {\r\n                            this._initDreamRecords(1, dreamSearchInput.value, event.target.value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value, data[0].email);\r\n                        } else {\r\n                            console.log('User not found');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error:', error);\r\n                    });\r\n            }\r\n            catch {\r\n                this._initDreamRecords(1, dreamSearchInput.value, event.target.value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initialize the Dream Mood listener for the select element and icon element\r\n    */\r\n    _initDreamMoodListener() {\r\n        const dreamMoodSelect = this.view.getDreamMoodSelectElement(),\r\n            dreamMoodIcon = this.view.getDreamMoodIconElement();\r\n\r\n        dreamMoodSelect.addEventListener(\"change\", (event) => {\r\n            switch (event.target.value) {\r\n                case 'All':\r\n                    dreamMoodIcon.src = '../icons/make_record/dream_mood/select.svg';\r\n                    break;\r\n                case 'Typical dream':\r\n                    dreamMoodIcon.src = '../icons/make_record/dream_mood/typical_dream.svg';\r\n                    break;\r\n                case 'Fun dream':\r\n                    dreamMoodIcon.src = '../icons/make_record/dream_mood/fun_dream.svg';\r\n                    break;\r\n                case 'Sad dream':\r\n                    dreamMoodIcon.src = '../icons/make_record/dream_mood/sad_dream.svg';\r\n                    break;\r\n                case 'Terrible':\r\n                    dreamMoodIcon.src = '../icons/make_record/dream_mood/terrible.svg';\r\n                    break;\r\n                case 'Made me think':\r\n                    dreamMoodIcon.src = '../icons/make_record/dream_mood/made_me_think.svg';\r\n                    break;\r\n                default:\r\n                    console.log('No such option in select dream category');\r\n            }\r\n\r\n            this.view.clearMainPlotHtml();\r\n\r\n            const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                categorySelect = this.view.getDreamCategorySelectElement(),\r\n                dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n            const userSearchDiv = this.view.getUserSearchDivElement();\r\n            try {\r\n                const userNickname = userSearchDiv.children[0].children[1].children[0].children[1].innerText;\r\n                this.model.getPromiseGetUserByNickname(userNickname)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data.length) {\r\n                            this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, event.target.value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value, data[0].email);\r\n                        } else {\r\n                            console.log('User not found');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error:', error);\r\n                    });\r\n            }\r\n            catch {\r\n                this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, event.target.value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initialize the Sort listener for the dream records by likes/views\r\n    */\r\n    _initSortListener() {\r\n        const dreamSortSelect = this.view.getDreamSortSelectElement(),\r\n            dreamSortIcon = this.view.getDreamSortIconElement();\r\n\r\n        dreamSortSelect.addEventListener(\"change\", (event) => {\r\n            switch (event.target.value) {\r\n                case 'Default':\r\n                    dreamSortIcon.src = '../icons/make_record/dream_mood/select.svg';\r\n                    break;\r\n                case 'likes':\r\n                    dreamSortIcon.src = '../icons/like_active.svg';\r\n                    break;\r\n                case 'views':\r\n                    dreamSortIcon.src = '../icons/view.svg';\r\n                    break;\r\n                default:\r\n                    console.log('No such option in select sort');\r\n            }\r\n\r\n            this.view.clearMainPlotHtml();\r\n\r\n            const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                categorySelect = this.view.getDreamCategorySelectElement(),\r\n                moodSelect = this.view.getDreamMoodSelectElement();\r\n\r\n            const userSearchDiv = this.view.getUserSearchDivElement();\r\n            try {\r\n                const userNickname = userSearchDiv.children[0].children[1].children[0].children[1].innerText;\r\n                this.model.getPromiseGetUserByNickname(userNickname)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data.length) {\r\n                            this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, event.target.value, data[0].email);\r\n                        } else {\r\n                            console.log('User not found');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error:', error);\r\n                    });\r\n            }\r\n            catch {\r\n                this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, event.target.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initialize the Main plot listener for the dynamic content in form of dream records accorging to filter and sort\r\n    */\r\n    _initMainPlotListener() {\r\n        const mainPlot = this.view.getMainPlotElement();\r\n        mainPlot.addEventListener('click', (event) => {\r\n            const currentPage = this.view.getCurrentPageNumberElement();\r\n            if (event.target.id === 'pagination-switcher-button-next') {\r\n                this.view.clearMainPlotHtml();\r\n\r\n                const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                    categorySelect = this.view.getDreamCategorySelectElement(),\r\n                    moodSelect = this.view.getDreamMoodSelectElement(),\r\n                    dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n                const userSearchDiv = this.view.getUserSearchDivElement();\r\n                try {\r\n                    const userNickname = userSearchDiv.children[0].children[1].children[0].children[1].innerText;\r\n                    this.model.getPromiseGetUserByNickname(userNickname)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            if (data.length) {\r\n                                this._initDreamRecords((+currentPage.innerText) + 1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value, data[0].email);\r\n                            } else {\r\n                                console.log('User not found');\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Error:', error);\r\n                        });\r\n                }\r\n                catch {\r\n                    this._initDreamRecords((+currentPage.innerText) + 1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value);\r\n                }\r\n            };\r\n            if (event.target.id === 'pagination-switcher-button-prev') {\r\n                this.view.clearMainPlotHtml();\r\n\r\n                const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                    categorySelect = this.view.getDreamCategorySelectElement(),\r\n                    moodSelect = this.view.getDreamMoodSelectElement(),\r\n                    dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n                const userSearchDiv = this.view.getUserSearchDivElement();\r\n                try {\r\n                    const userNickname = userSearchDiv.children[0].children[1].children[0].children[1].innerText;\r\n                    this.model.getPromiseGetUserByNickname(userNickname)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            if (data.length) {\r\n                                this._initDreamRecords((+currentPage.innerText) - 1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value, data[0].email);\r\n                            } else {\r\n                                console.log('User not found');\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Error:', error);\r\n                        });\r\n                }\r\n                catch {\r\n                    this._initDreamRecords((+currentPage.innerText) - 1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value);\r\n                }\r\n            };\r\n            if (event.target.id === 'empty-message-button') {\r\n                this.view.clearMainPlotHtml();\r\n                const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                    dreamCategorySelect = this.view.getDreamCategorySelectElement(),\r\n                    dreamCategoryIcon = this.view.getDreamCategoryIconElement(),\r\n                    dreamMoodSelect = this.view.getDreamMoodSelectElement(),\r\n                    dreamMoodIcon = this.view.getDreamMoodIconElement(),\r\n                    dreamSortSelect = this.view.getDreamSortSelectElement(),\r\n                    dreamSortIcon = this.view.getDreamSortIconElement(),\r\n                    userSearchDiv = this.view.getUserSearchDivElement();\r\n\r\n                dreamSearchInput.value = '';\r\n\r\n                dreamCategorySelect.value = 'All';\r\n                dreamCategoryIcon.src = '../icons/make_record/dream_mood/select.svg';\r\n\r\n                dreamMoodSelect.value = 'All';\r\n                dreamMoodIcon.src = '../icons/make_record/dream_mood/select.svg';\r\n\r\n                dreamSortSelect.value = 'Default';\r\n                dreamSortIcon.src = '../icons/make_record/dream_mood/select.svg';\r\n\r\n                userSearchDiv.innerHTML = '';\r\n\r\n                this._initDreamRecords();\r\n            };\r\n            if (event.target.parentElement.classList.contains('dream-record__main-bottom-user')) {\r\n                const userUrl = event.target.parentElement.children[0].src;\r\n                const userNickname = event.target.parentElement.children[1].innerText;\r\n                this.view.displayUserFilter(userUrl, userNickname);\r\n\r\n                this.model.getPromiseGetUserByNickname(userNickname)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        if (data.length) {\r\n\r\n                            this.view.clearMainPlotHtml();\r\n\r\n                            const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                                categorySelect = this.view.getDreamCategorySelectElement(),\r\n                                moodSelect = this.view.getDreamMoodSelectElement(),\r\n                                dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n                            this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value, data[0].email);\r\n                        } else {\r\n                            console.log('User not found');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error:', error);\r\n                    });\r\n            };\r\n            if (event.target.id === 'dream-record-main-bottom-look-link') {\r\n                const recordId = event.target.getAttribute('data-id');\r\n                localStorage.dreamRecordID = recordId;\r\n                window.location.href = \"./view_record.html\";\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initialize the User Search listener for the user search div element\r\n    */\r\n    _initUserSearchListener() {\r\n        const userSearchDiv = this.view.getUserSearchDivElement();\r\n        userSearchDiv.addEventListener('click', (event) => {\r\n            if (event.target.id === 'user-search-main-button') {\r\n                userSearchDiv.innerHTML = '';\r\n\r\n                this.view.clearMainPlotHtml();\r\n\r\n                const dreamSearchInput = this.view.getDreamSearchInputElement(),\r\n                    categorySelect = this.view.getDreamCategorySelectElement(),\r\n                    moodSelect = this.view.getDreamMoodSelectElement(),\r\n                    dreamSortSelect = this.view.getDreamSortSelectElement();\r\n\r\n                this._initDreamRecords(1, dreamSearchInput.value, categorySelect.options[categorySelect.selectedIndex].value, moodSelect.options[moodSelect.selectedIndex].value, dreamSortSelect.options[dreamSortSelect.selectedIndex].value);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    Initialize dream records based on the parameters provided.\r\n    @param {number} [currentPageNumber=1] - The current page number for pagination.\r\n    @param {string} [searchInput=''] - The search input for filtering records.\r\n    @param {string} [dreamCategory='All'] - The category of the dreams to filter.\r\n    @param {string} [dreamMood='All'] - The mood of the dreams to filter.\r\n    @param {string} [sort='Default'] - The sorting option for the records.\r\n    @param {string} [userEmail='All'] - The user email for filtering records. */\r\n    _initDreamRecords(currentPageNumber = 1, searchInput = '', dreamCategory = 'All', dreamMood = 'All', sort = 'Default', userEmail = 'All') {\r\n        const mainPlot = this.view.getMainPlotElement();\r\n\r\n        this.model.getPromiseGetDreamRecords(currentPageNumber, searchInput, dreamCategory, dreamMood, sort, userEmail)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    console.log('Error...');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(records => {\r\n                if (!records.pages) {\r\n                    this.view.toggleClassWaitingBackgroundOfMain();\r\n                    this.view.displayNoRecordsMessage(mainPlot);\r\n                } else {\r\n                    async function setupPagination(mainPlot, currentPageNumber, records, view) {\r\n                        if (records.pages === 1) {\r\n                            view.displaySimplePagination(mainPlot, records.items);\r\n                        } else {\r\n                            view.displayPagination(mainPlot, records.items, currentPageNumber, records.pages);\r\n                            if (currentPageNumber > 1) {\r\n                                const prevButton = view.getPrevButton();\r\n                                view.removeClassHidden(prevButton);\r\n                            };\r\n                            if (currentPageNumber === records.pages) {\r\n                                const nextButton = view.getNextButton();\r\n                                view.addClassHidden(nextButton);\r\n                            }\r\n                        }\r\n                    }\r\n                    setupPagination(mainPlot, currentPageNumber, records, this.view)\r\n                        .then(() => {\r\n                            records.data.forEach((record, index) => {\r\n                                this._putDreamRecord(mainPlot, record);\r\n                            });\r\n                        });\r\n                    this.view.toggleClassWaitingBackgroundOfMain();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error during getting records', error);\r\n            });\r\n    }\r\n\r\n    /**\r\n    Put a dream record on the main plot with specified data.\r\n    @param {Object} mainPlot - The main plot object where the dream record will be displayed.\r\n    @param {Object} record - The dream record data to be displayed. */\r\n    _putDreamRecord(mainPlot, record) {\r\n        this.model.getPromiseGetUserByEmail(record.email)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.length) {\r\n                    const dreamCategoryIcon = this.model.whichDreamCategoryIcon(record.dreamCategory),\r\n                        dreamCategoryIconDescription = record.dreamCategory,\r\n                        dreamMoodIcon = this.model.whichDreamMoodIcon(record.dreamMood),\r\n                        dreamMoodIconDescription = record.dreamMood,\r\n                        monthName = this.model.whichMonthNameByNumber(record.date.monthNumber),\r\n                        weekDay = this.model.whichWeekDayNameByNumber(record.date.weekNumber);\r\n                    let likedThis = '';\r\n                    if (record.likesUsersEmails.includes(record.email)) {\r\n                        if (localStorage.getItem('language') === 'ru') {\r\n                            likedThis = '<span class=\"dream-record__main-top-right-liked-this\">Вам понравилось</span>';\r\n                        } else {\r\n                            likedThis = '<span class=\"dream-record__main-top-right-liked-this\">You liked this</span>';\r\n                        }\r\n                    };\r\n                    this.view.displayDreamRecord(mainPlot, record, dreamCategoryIcon, dreamCategoryIconDescription, dreamMoodIcon, dreamMoodIconDescription, monthName, weekDay, data[0].avatar, data[0].nickname, record.id, likedThis);\r\n                } else {\r\n                    console.log('User not found');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n}","/**\r\n * registered_home page model module.\r\n * @module js/pages/registered_home/model\r\n */\r\nexport default class Model {\r\n\r\n    /**\r\n    Fetches dream records based on specified parameters.\r\n    @param {number} page - The page number to retrieve dream records from.\r\n    @param {string} searchInput - The search input for filtering dream records.\r\n    @param {string} category - The category of the dream records to filter by.\r\n    @param {string} mood - The mood of the dream records to filter by.\r\n    @param {string} sort - The sorting order for the dream records.\r\n    @param {string} email - The email address associated with the dream records.\r\n    @returns {Promise} - A Promise that resolves with the dream records fetched from the API. */\r\n    getPromiseGetDreamRecords(page, searchInput, category, mood, sort, email) {\r\n        if (sort !== 'Default') {\r\n            if (searchInput != '' && category !== 'All' && mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&dreamMood=${mood}&email=${email}&_sort=-${sort}`)\r\n            }\r\n\r\n            if (searchInput != '' && category !== 'All' && mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&dreamMood=${mood}&_sort=-${sort}`)\r\n            }\r\n            if (searchInput != '' && category !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&email=${email}&_sort=-${sort}`)\r\n            }\r\n            if (searchInput != '' && mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamMood=${mood}&email=${email}&_sort=-${sort}`)\r\n            }\r\n            if (category !== 'All' && mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&dreamMood=${mood}&email=${email}&_sort=-${sort}`)\r\n            }\r\n\r\n            if (searchInput != '' && category !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&_sort=-${sort}`)\r\n            }\r\n            if (searchInput != '' && mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamMood=${mood}&_sort=-${sort}`)\r\n            }\r\n            if (searchInput != '' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&email=${email}&_sort=-${sort}`)\r\n            }\r\n            if (category !== 'All' && mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&dreamMood=${mood}&_sort=-${sort}`)\r\n            }\r\n            if (category !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&email=${email}&_sort=-${sort}`)\r\n            }\r\n            if (mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamMood=${mood}&email=${email}&_sort=-${sort}`)\r\n            }\r\n\r\n            if (searchInput != '') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&_sort=-${sort}`)\r\n            }\r\n            if (category !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&_sort=-${sort}`)\r\n            }\r\n            if (mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamMood=${mood}&_sort=-${sort}`)\r\n            }\r\n            if (email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&email=${email}&_sort=-${sort}`)\r\n            }\r\n            return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&_sort=-${sort}`)\r\n        } else {\r\n            if (searchInput != '' && category !== 'All' && mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&dreamMood=${mood}&email=${email}`)\r\n            }\r\n\r\n            if (searchInput != '' && category !== 'All' && mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&dreamMood=${mood}`)\r\n            }\r\n            if (searchInput != '' && category !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}&email=${email}`)\r\n            }\r\n            if (searchInput != '' && mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamMood=${mood}&email=${email}`)\r\n            }\r\n            if (category !== 'All' && mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&dreamMood=${mood}&email=${email}`)\r\n            }\r\n\r\n            if (searchInput != '' && category !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamCategory=${category}`)\r\n            }\r\n            if (searchInput != '' && mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&dreamMood=${mood}`)\r\n            }\r\n            if (searchInput != '' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}&email=${email}`)\r\n            }\r\n            if (category !== 'All' && mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&dreamMood=${mood}`)\r\n            }\r\n            if (category !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}&email=${email}`)\r\n            }\r\n            if (mood !== 'All' && email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamMood=${mood}&email=${email}`)\r\n            }\r\n\r\n            if (searchInput != '') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamTitle=${searchInput}`)\r\n            }\r\n            if (category !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamCategory=${category}`)\r\n            }\r\n            if (mood !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&dreamMood=${mood}`)\r\n            }\r\n            if (email !== 'All') {\r\n                return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5&email=${email}`)\r\n            }\r\n            return fetch(`http://localhost:3000/records?_page=${page}&_per_page=5`)\r\n        }\r\n    }\r\n\r\n    /**\r\n    Fetches user by email from the API.\r\n    @param {string} email - The email address of the user to fetch.\r\n    @returns {Promise} - A Promise that resolves with the user data fetched from the API. */\r\n    getPromiseGetUserByEmail(email) {\r\n        return fetch(`http://localhost:3000/users?email=${email}`)\r\n    }\r\n\r\n    /**\r\n    Fetches user by nickname from the API.\r\n    @param {string} nickname - The nickname of the user to fetch.\r\n    @returns {Promise} - A Promise that resolves with the user data fetched from the API. */\r\n    getPromiseGetUserByNickname(nickanme) {\r\n        return fetch(`http://localhost:3000/users?nickname=${nickanme}`)\r\n    }\r\n\r\n    /**\r\n    Fetches all dream records from the API.\r\n    @returns {Promise} - A Promise that resolves with the dream records fetched from the API. */\r\n    getPromisegetDreamRecords() {\r\n        return fetch(`http://localhost:3000/records`)\r\n    }\r\n\r\n    /**\r\n    Returns the icon path based on the dream category name\r\n    @param {string} categoryName - The name of the dream category\r\n    @returns {string} - The path to the corresponding icon */\r\n    whichDreamCategoryIcon(categoryName) {\r\n\r\n        switch (categoryName) {\r\n            case 'Category':\r\n                return '../icons/make_record/dream_category/select.svg'\r\n            case 'Usual':\r\n                return '../icons/make_record/dream_category/usual.svg'\r\n            case 'Just talking':\r\n                return '../icons/make_record/dream_category/just_talking.svg'\r\n            case 'Nightmare':\r\n                return '../icons/make_record/dream_category/nightmare.svg'\r\n            case 'Action':\r\n                return '../icons/make_record/dream_category/action.svg'\r\n            case 'Trash':\r\n                return '../icons/make_record/dream_category/trash.svg'\r\n            case 'Conscious dream':\r\n                return '../icons/make_record/dream_category/conscious_dream.svg'\r\n            default:\r\n                console.log('No such option in select dream category')\r\n        }\r\n    }\r\n\r\n    /**\r\n    Returns the icon path based on the dream mood name\r\n    @param {string} moodName - The name of the dream mood\r\n    @returns {string} - The path to the corresponding icon */\r\n    whichDreamMoodIcon(moodName) {\r\n\r\n        switch (moodName) {\r\n            case 'Typical dream':\r\n                return '../icons/make_record/dream_mood/typical_dream.svg'\r\n            case 'Fun dream':\r\n                return '../icons/make_record/dream_mood/fun_dream.svg'\r\n            case 'Sad dream':\r\n                return '../icons/make_record/dream_mood/sad_dream.svg'\r\n            case 'Terrible':\r\n                return '../icons/make_record/dream_mood/terrible.svg'\r\n            case 'Made me think':\r\n                return '../icons/make_record/dream_mood/made_me_think.svg'\r\n            default:\r\n                console.log('No such option in select dream category')\r\n        }\r\n    }\r\n\r\n    /**\r\n    Returns the name of the month based on the month number provided.\r\n    @param {number} monthNumber - The month number (0-11).\r\n    @returns {string} - The name of the month corresponding to the month number provided. */\r\n    whichMonthNameByNumber(monthNumber) {\r\n\r\n        switch (monthNumber) {\r\n            case 0:\r\n                return 'January'\r\n            case 1:\r\n                return 'February'\r\n            case 2:\r\n                return 'March'\r\n            case 3:\r\n                return 'April'\r\n            case 4:\r\n                return 'May'\r\n            case 5:\r\n                return 'June'\r\n            case 6:\r\n                return 'July'\r\n            case 7:\r\n                return 'August'\r\n            case 8:\r\n                return 'September'\r\n            case 9:\r\n                return 'October'\r\n            case 10:\r\n                return 'November'\r\n            case 11:\r\n                return 'December'\r\n            default:\r\n                console.log('No such month')\r\n        }\r\n    }\r\n\r\n    /**\r\n    Returns the name of the week day based on the week day number provided.\r\n    @param {number} weekNumber - The week day number (0-6).\r\n    @returns {string} - The name of the week day corresponding to the week day number provided. */\r\n    whichWeekDayNameByNumber(weekNumber) {\r\n\r\n        switch (weekNumber) {\r\n            case 0:\r\n                return 'Sunday'\r\n            case 1:\r\n                return 'Monday'\r\n            case 2:\r\n                return 'Tuesday'\r\n            case 3:\r\n                return 'Wednesday'\r\n            case 4:\r\n                return 'Thursday'\r\n            case 5:\r\n                return 'Friday'\r\n            case 6:\r\n                return 'Saturday'\r\n            default:\r\n                console.log('No such week day')\r\n        }\r\n    }\r\n\r\n}","/**\r\n * registered_home page view module.\r\n * @module js/pages/registered_home/view\r\n */\r\n\r\nimport i18next from 'i18next';\r\n\r\nexport default class View {\r\n\r\n    static ID = {\r\n        MAIN: {\r\n            NOTIFICATION_BLOCK: 'notification',\r\n            PREV_BUTTON: 'pagination-switcher-button-prev',\r\n            NEXT_BUTTON: 'pagination-switcher-button-next',\r\n            CURRENT_PAGE_NUMBER: 'current-page-number',\r\n            MAIN_PLOT: 'main-plot',\r\n        },\r\n        FILTER: {\r\n            DREAM_SEARCH_INPUT: 'dream-search-input',\r\n            DREAM_SEARCH_AUTOCOMPLETE: 'auto-suggestions',\r\n            DREAM_SEARCH_BUTTON: 'dream-search-button',\r\n            DREAM_CATEGORY_SELECT: 'dream-category-select',\r\n            DREAM_CATEGORY_ICON: 'dream-category-icon',\r\n            DREAM_MOOD_SELECT: 'dream-mood-select',\r\n            DREAM_MOOD_ICON: 'dream-mood-icon',\r\n            DREAM_SORT_SELECT: 'dream-sort-select',\r\n            DREAM_SORT_ICON: 'dream-sort-icon',\r\n            USER_SEARCH_DIV: 'user-search-div',\r\n        },\r\n    }\r\n\r\n    /**\r\n    Returns the notification block element\r\n    @returns {Element} The notification block element */\r\n    getNotificationBlockElement() {\r\n        return document.querySelector(`#${View.ID.MAIN.NOTIFICATION_BLOCK}`);\r\n    }\r\n\r\n    /**\r\n    Returns the dream search input element\r\n    @returns {Element} The dream search input element */\r\n    getDreamSearchInputElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_SEARCH_INPUT}`);\r\n    }\r\n\r\n    /**\r\n    Returns the dream search autocomplete element\r\n    @returns {Element} The dream search autocomplete element */\r\n    getDreamSearchAutocompleteElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_SEARCH_AUTOCOMPLETE}`);\r\n    }\r\n\r\n    /**\r\n    Returns the dream search button element\r\n    @returns {Element} The dream search button element */\r\n    getDreamSearchButtonElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_SEARCH_BUTTON}`);\r\n    }\r\n\r\n    /**\r\n    Returns the dream category select element\r\n    @returns {Element} The dream category select element */\r\n    getDreamCategorySelectElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_CATEGORY_SELECT}`);\r\n    }\r\n\r\n    /**\r\n    Returns the dream category icon element\r\n    @returns {Element} The dream category icon element */\r\n    getDreamCategoryIconElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_CATEGORY_ICON}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the dream mood select element from the DOM.\r\n    @returns {Element} The dream mood select element. */\r\n    getDreamMoodSelectElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_MOOD_SELECT}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the dream mood icon element from the DOM.\r\n    @returns {Element} The dream mood icon element. */\r\n    getDreamMoodIconElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_MOOD_ICON}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the dream sort select element from the DOM.\r\n    @returns {Element} The dream sort select element. */\r\n    getDreamSortSelectElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_SORT_SELECT}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the dream sort icon element from the DOM.\r\n    @returns {Element} The dream sort icon element. */\r\n    getDreamSortIconElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.DREAM_SORT_ICON}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the current page number element from the DOM.\r\n    @returns {Element} The current page number element. */\r\n    getCurrentPageNumberElement() {\r\n        return document.querySelector(`#${View.ID.MAIN.CURRENT_PAGE_NUMBER}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the previous button element from the DOM.\r\n    @returns {Element} The previous button element. */\r\n    getPrevButton() {\r\n        return document.querySelector(`#${View.ID.MAIN.PREV_BUTTON}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the next button element from the DOM.\r\n    @returns {Element} The next button element. */\r\n    getNextButton() {\r\n        return document.querySelector(`#${View.ID.MAIN.NEXT_BUTTON}`);\r\n    }\r\n\r\n    /**\r\n    Finds and returns the main plot element from the DOM.\r\n    @returns {Element} The main plot element. */\r\n    getMainPlotElement() {\r\n        return document.querySelector(`#${View.ID.MAIN.MAIN_PLOT}`);\r\n    }\r\n\r\n    /**\r\n    Retrieves the user search div element from the DOM.\r\n    @returns {Element|null} The user search div element if found, or null if not found. */\r\n    getUserSearchDivElement() {\r\n        return document.querySelector(`#${View.ID.FILTER.USER_SEARCH_DIV}`);\r\n    }\r\n\r\n    /**\r\n    Clears the main plot HTML content and adds waiting background class. */\r\n    clearMainPlotHtml() {\r\n        const mainPlot = this.getMainPlotElement();\r\n        mainPlot.innerHTML = ``;\r\n        this.toggleClassWaitingBackgroundOfMain();\r\n    }\r\n\r\n    /**\r\n    Adds the 'hidden' class to the specified element.\r\n    @param {Element} element - The element to add the 'hidden' class to. */\r\n    addClassHidden(element) {\r\n        element.classList.add('hidden');\r\n    }\r\n\r\n    /**\r\n    Removes the 'hidden' class from the specified element.\r\n    @param {Element} element - The element to remove the 'hidden' class from. */\r\n    removeClassHidden(element) {\r\n        element.classList.remove('hidden');\r\n    }\r\n\r\n    /**\r\n    Display a message when there are no records to show based on the selected language.\r\n    @param {HTMLElement} mainPlot - The main plot element where the message will be displayed. */\r\n    displayNoRecordsMessage(mainPlot) {\r\n        if (localStorage.getItem('language') === 'ru') {\r\n            mainPlot.innerHTML +=\r\n                `<div class=\"empty-message\">\r\n                    <span class=\"empty-message__span\">Таких снов нет. Попробуйте изменить фильтры или поисковый запрос.</span>\r\n                    <button class=\"empty-message__button\" id=\"empty-message-button\">ОЧИСТИТЬ ПОИСК</button>\r\n                </div>`;\r\n        } else {\r\n            mainPlot.innerHTML +=\r\n                `<div class=\"empty-message\">\r\n                    <span class=\"empty-message__span\">There are no such dreams. Try to change the filters or the search query.</span>\r\n                    <button class=\"empty-message__button\" id=\"empty-message-button\">CLEAR SEARCH</button>\r\n                </div>`;\r\n        }\r\n    }\r\n\r\n    /**\r\n    Displays simple pagination based on the selected language and number of dreams\r\n    @param {HTMLElement} mainPlot - The element where the pagination will be displayed\r\n    @param {number} dreamsNumber - The number of dreams to determine the content of pagination */\r\n    displaySimplePagination(mainPlot, dreamsNumber) {\r\n        if (localStorage.getItem('language') === 'ru') {\r\n            let dynamicContent = '';\r\n            if (dreamsNumber === 1) {\r\n                dynamicContent = 'сон';\r\n            } else if (dreamsNumber % 10 === 1 && dreamsNumber % 100 !== 11) {\r\n                dynamicContent = 'сон';\r\n            } else if (dreamsNumber % 10 >= 2 && dreamsNumber % 10 <= 4 && (dreamsNumber % 100 < 10 || dreamsNumber % 100 >= 20)) {\r\n                dynamicContent = 'сна';\r\n            } else {\r\n                dynamicContent = 'снов';\r\n            }\r\n            mainPlot.innerHTML +=\r\n                `<div class=\"pagination-switcher\">\r\n                <button class=\"pagination-switcher__button hidden\"><</button>\r\n                    <div class=\"pagination-switcher__plot\">\r\n                        <div class=\"pagination-switcher__plot-top\">\r\n                            <span class=\"pagination-switcher__plot-text\">Найдено: </span>\r\n                            <span class=\"pagination-switcher__plot-key\">${dreamsNumber}</span>\r\n                            <span class=\"pagination-switcher__plot-text\"> ${dynamicContent}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"pagination-switcher__button hidden\"><</button>\r\n                </div>`\r\n        } else {\r\n            let dynamicContent = '';\r\n            dreamsNumber === 1 ? dynamicContent = 'dream' : dynamicContent = 'dreams';\r\n            mainPlot.innerHTML +=\r\n                `<div class=\"pagination-switcher\">\r\n                <button class=\"pagination-switcher__button hidden\"><</button>\r\n                    <div class=\"pagination-switcher__plot\">\r\n                        <div class=\"pagination-switcher__plot-top\">\r\n                            <span class=\"pagination-switcher__plot-text\">Found: </span>\r\n                            <span class=\"pagination-switcher__plot-key\">${dreamsNumber}</span>\r\n                            <span class=\"pagination-switcher__plot-text\"> ${dynamicContent}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"pagination-switcher__button hidden\"><</button>\r\n                </div>`\r\n        }\r\n    }\r\n\r\n    /**\r\n    Display pagination based on the current language and dream count\r\n    @param {HTMLElement} mainPlot - The main element to display pagination in\r\n    @param {number} dreamsNumber - The number of dreams to display\r\n    @param {number} currentPageNumber - The current page number being displayed\r\n    @param {number} pagesNumber - The total number of pages available */\r\n    displayPagination(mainPlot, dreamsNumber, currentPageNumber, pagesNumber) {\r\n        if (localStorage.getItem('language') === 'ru') {\r\n            let dynamicContent = '';\r\n            if (dreamsNumber === 1) {\r\n                dynamicContent = 'сон';\r\n            } else if (dreamsNumber % 10 === 1 && dreamsNumber % 100 !== 11) {\r\n                dynamicContent = 'сон';\r\n            } else if (dreamsNumber % 10 >= 2 && dreamsNumber % 10 <= 4 && (dreamsNumber % 100 < 10 || dreamsNumber % 100 >= 20)) {\r\n                dynamicContent = 'сна';\r\n            } else {\r\n                dynamicContent = 'снов';\r\n            }\r\n            mainPlot.innerHTML +=\r\n                `<div class=\"pagination-switcher\">\r\n                    <button class=\"pagination-switcher__button hidden\" id=\"pagination-switcher-button-prev\"><</button>\r\n                    <div class=\"pagination-switcher__plot\">\r\n                        <div class=\"pagination-switcher__plot-top\">\r\n                            <span class=\"pagination-switcher__plot-text\">Найдено: </span>\r\n                            <span class=\"pagination-switcher__plot-key\">${dreamsNumber}</span>\r\n                            <span class=\"pagination-switcher__plot-text\"> ${dynamicContent}</span>\r\n                        </div>\r\n                        <div class=\"pagination-switcher__plot-bottom\">\r\n                            <span class=\"pagination-switcher__plot-text\">Страница </span>\r\n                            <span class=\"pagination-switcher__plot-key\" id=\"current-page-number\">${currentPageNumber}</span>\r\n                            <span class=\"pagination-switcher__plot-text\"> из </span>\r\n                            <span class=\"pagination-switcher__plot-key\">${pagesNumber}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"pagination-switcher__button\" id=\"pagination-switcher-button-next\">></button>\r\n                </div>`\r\n        } else {\r\n            let dynamicContent = '';\r\n            dreamsNumber === 1 ? dynamicContent = 'dream' : dynamicContent = 'dreams';\r\n            mainPlot.innerHTML +=\r\n                `<div class=\"pagination-switcher\">\r\n                    <button class=\"pagination-switcher__button hidden\" id=\"pagination-switcher-button-prev\"><</button>\r\n                    <div class=\"pagination-switcher__plot\">\r\n                        <div class=\"pagination-switcher__plot-top\">\r\n                            <span class=\"pagination-switcher__plot-text\">Found: </span>\r\n                            <span class=\"pagination-switcher__plot-key\">${dreamsNumber}</span>\r\n                            <span class=\"pagination-switcher__plot-text\"> ${dynamicContent}</span>\r\n                        </div>\r\n                        <div class=\"pagination-switcher__plot-bottom\">\r\n                            <span class=\"pagination-switcher__plot-text\">Page </span>\r\n                            <span class=\"pagination-switcher__plot-key\" id=\"current-page-number\">${currentPageNumber}</span>\r\n                            <span class=\"pagination-switcher__plot-text\"> of </span>\r\n                            <span class=\"pagination-switcher__plot-key\">${pagesNumber}</span>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"pagination-switcher__button\" id=\"pagination-switcher-button-next\">></button>\r\n                </div>`\r\n        }\r\n    }\r\n\r\n    /**\r\n    Display the dream record on the webpage\r\n    @param {HTMLElement} mainPlot - The element where the dream record will be displayed\r\n    @param {Object} record - The dream record data\r\n    @param {string} dreamCategoryIcon - The icon representing the dream category\r\n    @param {string} dreamCategoryIconDescription - Description of the dream category icon\r\n    @param {string} dreamMoodIcon - The icon representing the dream mood\r\n    @param {string} dreamMoodIconDescription - Description of the dream mood icon\r\n    @param {string} monthName - The name of the month when the dream occurred\r\n    @param {string} weekDay - The day of the week when the dream occurred\r\n    @param {string} avatarUrl - The URL of the user's avatar\r\n    @param {string} nickname - The user's nickname\r\n    @param {string} id - The unique ID of the dream record\r\n    @param {string} likedThis - Indicates if the user has liked this dream record */\r\n    displayDreamRecord(mainPlot, record, dreamCategoryIcon, dreamCategoryIconDescription, dreamMoodIcon, dreamMoodIconDescription, monthName, weekDay, avatarUrl, nickname, id, likedThis) {\r\n        var dynamicTagContent = '',\r\n            likesSpan = '';\r\n\r\n        record.dreamTags.forEach(tagName => {\r\n            dynamicTagContent += `<button class=\"dream-record__main-middle-tags-button\">${tagName}</button>`;\r\n        });\r\n\r\n\r\n        if (localStorage.getItem('language') === 'ru') {\r\n\r\n            if (record.likes === 1) {\r\n                likesSpan = 'лайк';\r\n            } else if (record.likes % 10 === 1 && record.likes % 100 !== 11) {\r\n                likesSpan = 'лайк';\r\n            } else if (record.likes % 10 >= 2 && record.likes % 10 <= 4 && (record.likes % 100 < 10 || record.likes % 100 >= 20)) {\r\n                likesSpan = 'лайка';\r\n            } else {\r\n                likesSpan = 'лайков';\r\n            }\r\n\r\n            mainPlot.innerHTML += `<div class=\"dream-record\">\r\n            <div class=\"dream-record__visual\">\r\n                <img src=\"${record.dreamImageUrl}\" alt=\"\"\r\n                    class=\"dream-record__visual-primary\">\r\n                     <div class=\"dream-record__visual-secondary\">\r\n                    <div class=\"image-wrapper\">\r\n                      <img src=${dreamCategoryIcon} alt=\"dream category\" help=\"xui\"\r\n                        class=\"dream-record__visual-secondary-icon\">\r\n                        <div class=\"description-label\">${dreamCategoryIconDescription}</div>\r\n                      </div>\r\n                      <div class=\"image-wrapper\">\r\n                         <img src=${dreamMoodIcon} alt=\"dream mood\"\r\n                        class=\"dream-record__visual-secondary-icon\">\r\n                        <div class=\"description-label\">${dreamMoodIconDescription}</div>\r\n                      </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"dream-record__main\">\r\n                <div class=\"dream-record__main-top\">\r\n                    <div class=\"dream-record__main-top-left\">\r\n                        <h2 class=\"dream-record__main-top-left-title\">${record.dreamTitle}</h2>\r\n                        <h3 class=\"dream-record__main-top-left-date\">\r\n                        ${record.date.dayNumber} \r\n                        ${this.translateMonthToRu(monthName)} \r\n                        ${record.date.year} \r\n                        (${this.translateWeekDayToRu(weekDay)})\r\n                        </h3>\r\n                    </div>\r\n                    <div class=\"dream-record__main-top-right\">\r\n                        <span class=\"dream-record__main-top-right-likes\">${record.likes} ${likesSpan}</span>\r\n                        ${likedThis}\r\n                        <span class=\"dream-record__main-top-right-views\">${record.views} просмотров</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dream-record__main-middle\">\r\n                    <div class=\"dream-record__main-middle-tags\">${dynamicTagContent}</div>\r\n                    <p class=\"dream-record__main-middle-plot\">${record.dreamPlot}</p>\r\n                </div>\r\n                <div class=\"dream-record__main-bottom\">\r\n                    <button class=\"dream-record__main-bottom-user\">\r\n                        <img src=\"${avatarUrl}\" alt=\"\" class=\"dream-record__main-bottom-user-avatar\">\r\n                        <span>${nickname}</span>\r\n                    </button>\r\n                    <a href=\"#\" data-id=${id} class=\"dream-record__main-bottom-look-link\" id=\"dream-record-main-bottom-look-link\">Посмотреть</a>\r\n                </div>\r\n            </div>\r\n        </div>`\r\n        } else {\r\n\r\n            record.likes === 1 ? likesSpan = 'like' : likesSpan = 'likes';\r\n\r\n            mainPlot.innerHTML += `<div class=\"dream-record\">\r\n            <div class=\"dream-record__visual\">\r\n                <img src=\"${record.dreamImageUrl}\" alt=\"\"\r\n                    class=\"dream-record__visual-primary\">\r\n                     <div class=\"dream-record__visual-secondary\">\r\n                    <div class=\"image-wrapper\">\r\n                      <img src=${dreamCategoryIcon} alt=\"dream category\" help=\"xui\"\r\n                        class=\"dream-record__visual-secondary-icon\">\r\n                        <div class=\"description-label\">${dreamCategoryIconDescription}</div>\r\n                      </div>\r\n                      <div class=\"image-wrapper\">\r\n                         <img src=${dreamMoodIcon} alt=\"dream mood\"\r\n                        class=\"dream-record__visual-secondary-icon\">\r\n                        <div class=\"description-label\">${dreamMoodIconDescription}</div>\r\n                      </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"dream-record__main\">\r\n                <div class=\"dream-record__main-top\">\r\n                    <div class=\"dream-record__main-top-left\">\r\n                        <h2 class=\"dream-record__main-top-left-title\">${record.dreamTitle}</h2>\r\n                        <h3 class=\"dream-record__main-top-left-date\">\r\n                        ${record.date.dayNumber} \r\n                        ${monthName} \r\n                        ${record.date.year} \r\n                        (${weekDay})\r\n                        </h3>\r\n                    </div>\r\n                    <div class=\"dream-record__main-top-right\">\r\n                        <span class=\"dream-record__main-top-right-likes\">${record.likes} ${likesSpan}</span>\r\n                        ${likedThis}\r\n                        <span class=\"dream-record__main-top-right-views\">${record.views} views</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dream-record__main-middle\">\r\n                    <div class=\"dream-record__main-middle-tags\">${dynamicTagContent}</div>\r\n                    <p class=\"dream-record__main-middle-plot\">${record.dreamPlot}</p>\r\n                </div>\r\n                <div class=\"dream-record__main-bottom\">\r\n                    <button class=\"dream-record__main-bottom-user\">\r\n                        <img src=\"${avatarUrl}\" alt=\"\" class=\"dream-record__main-bottom-user-avatar\">\r\n                        <span>${nickname}</span>\r\n                    </button>\r\n                    <a href=\"#\" data-id=${id} class=\"dream-record__main-bottom-look-link\" id=\"dream-record-main-bottom-look-link\">Look</a>\r\n                </div>\r\n            </div>\r\n        </div>`\r\n        }\r\n    }\r\n\r\n    /**\r\n    Translates the month from English to Russian.\r\n    @param {string} month - The month in English (e.g. 'January').\r\n    @returns {string} - The month translated to Russian (e.g. 'Января'). */\r\n    translateMonthToRu(month) {\r\n        switch (month) {\r\n            case 'January':\r\n                return 'Января';\r\n            case 'February':\r\n                return 'Февраля';\r\n            case 'March':\r\n                return 'Марта';\r\n            case 'April':\r\n                return 'Апреля';\r\n            case 'May':\r\n                return 'Мая';\r\n            case 'June':\r\n                return 'Июня';\r\n            case 'July':\r\n                return 'Июля';\r\n            case 'August':\r\n                return 'Августа';\r\n            case 'September':\r\n                return 'Сентября';\r\n            case 'October':\r\n                return 'Октября';\r\n            case 'November':\r\n                return 'Ноября';\r\n            case 'December':\r\n                return 'Декабря';\r\n            default:\r\n                return '???';\r\n        }\r\n    }\r\n\r\n    /**\r\n    Translates the week day from English to Russian.\r\n    @param {string} weekDay - The week day in English (e.g. 'Monday').\r\n    @returns {string} - The week day translated to Russian (e.g. 'Понедельник'). */\r\n    translateWeekDayToRu(weekDay) {\r\n        switch (weekDay) {\r\n            case 'Monday':\r\n                return 'Понедельник';\r\n            case 'Tuesday':\r\n                return 'Вторник';\r\n            case 'Wednesday':\r\n                return 'Среда';\r\n            case 'Thursday':\r\n                return 'Четверг';\r\n            case 'Friday':\r\n                return 'Пятница';\r\n            case 'Saturday':\r\n                return 'Суббота';\r\n            case 'Sunday':\r\n                return 'Воскресенье';\r\n            default:\r\n                return '???';\r\n        }\r\n    }\r\n\r\n    /**\r\n    Displays the user filter based on the user's avatar URL and nickname,\r\n    considering the language stored in the localStorage.\r\n    @param {string} userAvatarUrl - The URL of the user's avatar.\r\n    @param {string} userNickname - The user's nickname. */\r\n    displayUserFilter(userAvatarUrl, userNickname) {\r\n        const userSearchDiv = this.getUserSearchDivElement();\r\n        if (localStorage.getItem('language') === 'ru') {\r\n            userSearchDiv.innerHTML =\r\n                `<div class=\"main__filter-block user-search\">\r\n                    <span class=\"user-search__title\">Сны пользователя</span>\r\n                    <div class=\"user-search__main\">\r\n                        <div class=\"user-search__main-left\">\r\n                            <img src=${userAvatarUrl} alt=\"user avatar\"\r\n                                class=\"user-search__main-left-avatar\">\r\n                                <span class=\"user-search__main-left-nickname\">${userNickname}</span>\r\n                        </div>\r\n                        <button class=\"user-search__main-button\" id=\"user-search-main-button\">x</button>\r\n                    </div>\r\n                </div>`\r\n        } else {\r\n            userSearchDiv.innerHTML =\r\n                `<div class=\"main__filter-block user-search\">\r\n                    <span class=\"user-search__title\">Dreams of user</span>\r\n                    <div class=\"user-search__main\">\r\n                        <div class=\"user-search__main-left\">\r\n                            <img src=${userAvatarUrl} alt=\"user avatar\"\r\n                                class=\"user-search__main-left-avatar\">\r\n                                <span class=\"user-search__main-left-nickname\">${userNickname}</span>\r\n                        </div>\r\n                        <button class=\"user-search__main-button\" id=\"user-search-main-button\">x</button>\r\n                    </div>\r\n                </div>`\r\n        }\r\n    }\r\n\r\n    /**\r\n    Toggles the 'waiting-background' class on the '.main' element,\r\n    which is used to apply styling for waiting/loading state. */\r\n    toggleClassWaitingBackgroundOfMain() {\r\n        document.querySelector('.main').classList.toggle('waiting-background');\r\n    }\r\n\r\n    /**\r\n    Translates the page content between English and Russian using data from a dictionary JSON file.\r\n    */\r\n    translatePage() {\r\n        fetch('../dictionary.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                i18next.init({\r\n                    lng: 'ru',\r\n                    debug: false,\r\n                    resources: {\r\n                        ru: {\r\n                            translation: data\r\n                        }\r\n                    }\r\n                });\r\n\r\n                document.querySelector(`#header-link-home`).textContent = i18next.t('registered_header.home');\r\n                document.querySelector(`#header-link-time`).textContent = i18next.t('registered_header.moon');\r\n                document.querySelector(`#header-link-moon`).textContent = i18next.t('registered_header.time');\r\n                document.querySelector(`#header-link-music`).textContent = i18next.t('registered_header.music');\r\n                document.querySelector(`#header-link-profile`).textContent = i18next.t('registered_header.profile');\r\n                document.querySelector(`#header-link-sign-out`).textContent = i18next.t('registered_header.sign_out');\r\n\r\n                document.querySelector(`#header-link-home-burger`).textContent = i18next.t('registered_header.home');\r\n                document.querySelector(`#header-link-time-burger`).textContent = i18next.t('registered_header.time');\r\n                document.querySelector(`#header-link-moon-burger`).textContent = i18next.t('registered_header.moon');\r\n                document.querySelector(`#header-link-music-burger`).textContent = i18next.t('registered_header.music');\r\n                document.querySelector(`#header-link-profile-burger`).textContent = i18next.t('registered_header.profile');\r\n                document.querySelector(`#header-link-sign-out-burger`).textContent = i18next.t('registered_header.sign_out');\r\n\r\n                document.querySelector(`#notification`).innerHTML = `\r\n                    <p>${i18next.t('registered_home.notification')}<img src=\"../icons/like_active.svg\" alt=\"heart\"></p>\r\n                `;\r\n\r\n                document.querySelector(`#filter-search-span`).textContent = i18next.t('registered_home.filter_search_span');\r\n                document.querySelector(`#filter-category-span`).textContent = i18next.t('registered_home.filter_category_span');\r\n                document.querySelector(`#filter-mood-span`).textContent = i18next.t('registered_home.filter_moon_span');\r\n                document.querySelector(`#filter-sort-span`).textContent = i18next.t('registered_home.filter_sort_span');\r\n                document.querySelector(`#dream-category-select`).options[0].textContent = i18next.t('registered_home.dream_category_select_option_first');\r\n                document.querySelector(`#dream-category-select`).options[1].textContent = i18next.t('registered_home.dream_category_select_option_second');\r\n                document.querySelector(`#dream-category-select`).options[2].textContent = i18next.t('registered_home.dream_category_select_option_third');\r\n                document.querySelector(`#dream-category-select`).options[3].textContent = i18next.t('registered_home.dream_category_select_option_fourth');\r\n                document.querySelector(`#dream-category-select`).options[4].textContent = i18next.t('registered_home.dream_category_select_option_fifth');\r\n                document.querySelector(`#dream-category-select`).options[5].textContent = i18next.t('registered_home.dream_category_select_option_sixth');\r\n                document.querySelector(`#dream-category-select`).options[6].textContent = i18next.t('registered_home.dream_category_select_option_seventh');\r\n                document.querySelector(`#dream-mood-select`).options[0].textContent = i18next.t('registered_home.dream_mood_select_option_first');\r\n                document.querySelector(`#dream-mood-select`).options[1].textContent = i18next.t('registered_home.dream_mood_select_option_second');\r\n                document.querySelector(`#dream-mood-select`).options[2].textContent = i18next.t('registered_home.dream_mood_select_option_third');\r\n                document.querySelector(`#dream-mood-select`).options[3].textContent = i18next.t('registered_home.dream_mood_select_option_fourth');\r\n                document.querySelector(`#dream-mood-select`).options[4].textContent = i18next.t('registered_home.dream_mood_select_option_fifth');\r\n                document.querySelector(`#dream-mood-select`).options[5].textContent = i18next.t('registered_home.dream_mood_select_option_sixth');\r\n                document.querySelector(`#dream-sort-select`).options[0].textContent = i18next.t('registered_home.dream_sort_select_option_first');\r\n                document.querySelector(`#dream-sort-select`).options[1].textContent = i18next.t('registered_home.dream_sort_select_option_second');\r\n                document.querySelector(`#dream-sort-select`).options[2].textContent = i18next.t('registered_home.dream_sort_select_option_third');\r\n                document.querySelector(`#share-dream-link`).textContent = i18next.t('registered_home.share_dream_link');\r\n\r\n                document.querySelector(`#footer-plot`).textContent = i18next.t('footer.footer_plot');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error loading JSON file:', error);\r\n            });\r\n    }\r\n}\r\n","const consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nfunction defer() {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n}\nconst lastOfPathSeparatorRegExp = /###/g;\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  const stack = typeof path !== 'string' ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper()) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n}\nfunction setPath(object, path, newValue) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last && last.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n}\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\nfunction deepFind(obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n}\nfunction getCleanedCode(code) {\n  if (code && code.indexOf('_') > 0) return code.replace('_', '-');\n  return code;\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (typeof key === 'string' && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    if (this.options.compatibilityAPI === 'v1') return {\n      ...{},\n      ...this.getResource(lng, ns)\n    };\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      if (this.processors[processor]) value = this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    return {\n      key,\n      namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = resolved && resolved.usedKey || key;\n    const resExactUsedKey = resolved && resolved.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = resType === '[object Array]';\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res) options.lng = resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey && lastKey[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (typeof keys === 'string') keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && typeof options.replace !== 'string';\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n      if (this.options.lowerCaseLng) {\n        p = p.map(part => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n      return p.join('-');\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (typeof code === 'string' && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nlet sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nlet _rulesPluralsTypes = {\n  1: function (n) {\n    return Number(n > 1);\n  },\n  2: function (n) {\n    return Number(n != 1);\n  },\n  3: function (n) {\n    return 0;\n  },\n  4: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function (n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function (n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function (n) {\n    return Number(n >= 2);\n  },\n  10: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function (n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function (n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function (n) {\n    return Number(n !== 0);\n  },\n  14: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function (n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function (n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  const rules = {};\n  sets.forEach(set => {\n    set.lngs.forEach(l => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.shouldUseIntlApi()) {\n      try {\n        return new Intl.PluralRules(getCleanedCode(code === 'dev' ? 'en' : code), {\n          type: options.ordinal ? 'ordinal' : 'cardinal'\n        });\n      } catch (err) {\n        return;\n      }\n    }\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n    return rule && rule.numbers.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (!rule) {\n      return [];\n    }\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    return rule.numbers.map(number => this.getSuffix(code, number, options));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n    const returnSuffix = () => this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString();\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nfunction deepFindWithDefaults(data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && typeof key === 'string') {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n}\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const iOpts = options.interpolation;\n    this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n    this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n    this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n    this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n    this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n    this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n    this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n    this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n    this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp && existingRegExp.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    function regexSafe(val) {\n      return val.replace(/\\$/g, '$$$$');\n    }\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    function handleHasOptions(key, inheritedOptions) {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      delete clonedOptions.defaultValue;\n      return key;\n    }\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && typeof value !== 'string') return value;\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nfunction parseFormatStr(formatStr) {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (!opt) return;\n        const [key, ...rest] = opt.split(':');\n        const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  const cache = {};\n  return function invokeFormatter(val, lng, options) {\n    const key = lng + JSON.stringify(options);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    const iOpts = options.interpolation;\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (data) {\n      this.store.addResourceBundle(lng, ns, data);\n    }\n    this.state[name] = err ? -1 : 2;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: false,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      let ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        const options = args[3] || args[2];\n        Object.keys(options).forEach(key => {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: value => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (typeof options.ns === 'string') {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    function createClassOnDemand(ClassOrObject) {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = typeof language === 'string' ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    return this.translator && this.translator.translate(...arguments);\n  }\n  exists() {\n    return this.translator && this.translator.exists(...arguments);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (typeof ns === 'string') ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'string') lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0);\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\n/**\r\n * registered_home page index module.\r\n * @module js/pages/registered_home/index\r\n */\r\n\r\nimport Model from './model.js'\r\nimport View from './view.js'\r\nimport Controller from './controller.js'\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    new Controller(new View(), new Model()).init();\r\n});"],"names":["Controller","constructor","view","model","init","_initTranslation","_initBurgerButtonListener","_initNotification","_initDreamSearchInputElement","_initDreamSearchListener","_initDreamCategoryListener","_initDreamMoodListener","_initSortListener","_initMainPlotListener","_initUserSearchListener","_initDreamRecords","localStorage","getItem","translatePage","document","querySelector","addEventListener","event","target","id","parentNode","classList","remove","closest","add","interaction","interacted","defaultInterval","setInterval","currentTime","Date","hours","getHours","minutes","getMinutes","notification","getNotificationBlockElement","style","display","setTimeout","clearInterval","sound","Audio","play","dreamSearchInput","getDreamSearchInputElement","dreamSearchButton","getDreamSearchButtonElement","getPromisegetDreamRecords","then","response","json","data","possibleSuggestions","map","record","dreamTitle","counter","searchInputValue","value","toLowerCase","autoSuggestions","getDreamSearchAutocompleteElement","innerHTML","i","length","suggestion","includes","suggestionElement","createElement","textContent","href","onclick","click","appendChild","key","catch","error","console","clearMainPlotHtml","categorySelect","getDreamCategorySelectElement","moodSelect","getDreamMoodSelectElement","dreamSortSelect","getDreamSortSelectElement","userSearchDiv","getUserSearchDivElement","userNickname","children","innerText","getPromiseGetUserByNickname","options","selectedIndex","email","log","dreamCategorySelect","dreamCategoryIcon","getDreamCategoryIconElement","src","dreamMoodSelect","dreamMoodIcon","getDreamMoodIconElement","dreamSortIcon","getDreamSortIconElement","mainPlot","getMainPlotElement","currentPage","getCurrentPageNumberElement","parentElement","contains","userUrl","displayUserFilter","recordId","getAttribute","dreamRecordID","window","location","currentPageNumber","searchInput","dreamCategory","dreamMood","sort","userEmail","getPromiseGetDreamRecords","ok","records","pages","toggleClassWaitingBackgroundOfMain","displayNoRecordsMessage","setupPagination","displaySimplePagination","items","displayPagination","prevButton","getPrevButton","removeClassHidden","nextButton","getNextButton","addClassHidden","forEach","index","_putDreamRecord","getPromiseGetUserByEmail","whichDreamCategoryIcon","dreamCategoryIconDescription","whichDreamMoodIcon","dreamMoodIconDescription","monthName","whichMonthNameByNumber","date","monthNumber","weekDay","whichWeekDayNameByNumber","weekNumber","likedThis","likesUsersEmails","displayDreamRecord","avatar","nickname","Model","page","category","mood","fetch","nickanme","categoryName","moodName","i18next","View","ID","MAIN","NOTIFICATION_BLOCK","PREV_BUTTON","NEXT_BUTTON","CURRENT_PAGE_NUMBER","MAIN_PLOT","FILTER","DREAM_SEARCH_INPUT","DREAM_SEARCH_AUTOCOMPLETE","DREAM_SEARCH_BUTTON","DREAM_CATEGORY_SELECT","DREAM_CATEGORY_ICON","DREAM_MOOD_SELECT","DREAM_MOOD_ICON","DREAM_SORT_SELECT","DREAM_SORT_ICON","USER_SEARCH_DIV","element","dreamsNumber","dynamicContent","pagesNumber","avatarUrl","dynamicTagContent","likesSpan","dreamTags","tagName","likes","dreamImageUrl","dayNumber","translateMonthToRu","year","translateWeekDayToRu","views","dreamPlot","month","userAvatarUrl","toggle","lng","debug","resources","ru","translation","t"],"sourceRoot":""}