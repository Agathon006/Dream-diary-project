(()=>{"use strict";window.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("#register-form"),t=document.querySelector("#nickname-input"),n=document.querySelector("#email-input"),r=document.querySelector("#password-input"),s=document.querySelector("#register-form-submit");e.addEventListener("submit",(o=>{o.preventDefault(),document.querySelectorAll(".wrong-input").forEach((e=>{e.classList.remove("wrong-input")})),document.querySelectorAll(".wrong-span").forEach((e=>{e.remove()}));const a=new FormData(e),i=Object.fromEntries(a);console.log(i);let c=!0;if(!i.nickname.match(/^[a-zA-Z][a-zA-Z0-9_]{4,14}$/)){t.classList.add("wrong-input");let e=document.createElement("span");e.innerText="Nickname must consist of 5-15 numbers/letters and can't start with a number",e.classList.add("wrong-span"),t.parentNode.insertBefore(e,t.nextSibling),c=!1}if(!i.email.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)){n.classList.add("wrong-input");let e=document.createElement("span");e.innerText="Incorrect email",e.classList.add("wrong-span"),n.parentNode.insertBefore(e,n.nextSibling),c=!1}if(!i.password.match(/^(?=.*[a-z])(?=.*[A-Z]).{6,200}$/)){r.classList.add("wrong-input");let e=document.createElement("span");e.innerText="Password must have 6-200 symbols with at least 1 uppercase and 1 lowercase letter",e.classList.add("wrong-span"),r.parentNode.insertBefore(e,r.nextSibling),c=!1}if(c){const e=fetch(`http://localhost:3000/users?nickname=${i.nickname}`).then((e=>{if(!e.ok){let e=document.createElement("span");e.innerText="Network response was not ok",e.classList.add("wrong-span"),s.parentNode.insertBefore(e,s.nextSibling)}return e.json()})).then((e=>{if(e.length){t.classList.add("wrong-input");let e=document.createElement("span");return e.innerText="That nickname is already used",e.classList.add("wrong-span"),t.parentNode.insertBefore(e,t.nextSibling),!0}return!1})).catch((e=>{let t=document.createElement("span");t.innerText="Something go wrong... ",t.classList.add("wrong-span"),s.parentNode.insertBefore(t,s.nextSibling)})),r=fetch(`http://localhost:3000/users?email=${i.email}`).then((e=>{if(!e.ok){let e=document.createElement("span");e.innerText="Network response was not ok",e.classList.add("wrong-span"),s.parentNode.insertBefore(e,s.nextSibling)}return e.json()})).then((e=>{if(e.length){n.classList.add("wrong-input");let e=document.createElement("span");return e.innerText="That email is already used",e.classList.add("wrong-span"),n.parentNode.insertBefore(e,n.nextSibling),!0}return!1})).catch((e=>{let t=document.createElement("span");t.innerText="Something go wrong... ",t.classList.add("wrong-span"),s.parentNode.insertBefore(t,s.nextSibling)}));Promise.all([e,r]).then((e=>{if(!e[0]&&!e[1]){const e=JSON.stringify(Object.fromEntries(a));fetch("http://localhost:3000/users",{method:"POST",headers:{"Content-Type":"application/json"},body:e}).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{console.log("Data posted: ",e)})).catch((e=>{console.error("Error posting data: ",e);let t=document.createElement("span");t.innerText="Something go wrong... ",t.classList.add("wrong-span"),s.parentNode.insertBefore(t,s.nextSibling)}))}})).catch((e=>{console.error("Error:",e)}))}}))}))})();
//# sourceMappingURL=bundle_register.js.map